---
import type { Technology, FullProject } from "@db/models";
import { ProjectType } from "@lib/ProjectType";
import { Icon } from "astro-icon/components";
import { presentProjects } from "@db/projects";
import { listSkills } from "@db/skills";
import MainLayout from "@layouts/MainLayout.astro";
import Project from "@components/Project.astro";
import Skill from "@components/Skill.astro";

const [projects, skills] = await Promise.all([
    presentProjects(),
    listSkills(),
] as any as [FullProject[], Technology[]]);
---

<MainLayout title="Portfolio de Thomas Gysemans - Mes projets">
    <h1 class="text-4xl text-center mt-32">Mes projets</h1>
    <div class="w-full px-main mt-20 mb-5 grid grid-cols-[repeat(auto-fit,minmax(100px,240px))] gap-20">
        <div>
            <label for="filter-type">Filtrer selon le type</label>
            <select id="filter-type" name="filter-type">
                <option value="all" selected>Tous</option>
                {ProjectType.getAllTypes().map(p => (
                    <option value={p.frenchName}>{p.frenchName}</option>
                ))}
            </select>
        </div>
        <div>
            <label for="filter-date">Trier selon la date</label>
            <select id="filter-date" name="filter-date">
                <option value="none" selected>Aucun tri</option>
                <option value="recent">Plus récents</option>
                <option value="oldest">Plus anciens</option>
            </select>
        </div>
        <div>
            <label for="filter-techno">Filtrer selon les technologies</label>
            <select id="filter-techno" name="filter-techno">
                <option value="all" selected>Toutes</option>
                {skills.map(s => (
                    <option value={s.name}>{s.name}</option>
                ))}
            </select>
        </div>
        <div class="relative flex items-end">
            <Icon name="search" class="absolute bottom-4 left-3.5 text-primary/50" />
            <input
                type="search"
                placeholder="Rechercher un projet"
                aria-label="Rechercher un projet"
                class="text-primary bg-white border-2 border-primary/50 rounded-md pr-4 pl-9 py-3 w-full text-sm"
            />
        </div>
    </div>
    <div id="technologies-filter-container" class="px-main space-y-4" style="display: none;">
        <p class="max-w-96 text-xs">Vous êtes en train de filtrer les projets qui utilisent les technologies ci-dessous. Sélectionnez d'autres technologies pour affiner le filtre ci-dessus.</p>
        <div class="flex flex-wrap" />
    </div>
    <div id="projects-container" class="grid grid-cols-[repeat(auto-fit,minmax(280px,380px))] gap-10 px-main my-12">
        {projects.map(p => (
            <Project project={p} />
        ))}
    </div>
    <div id="no-project-container" class="flex flex-col items-center justify-center w-full px-main space-y-6" style="display: none;">
        <img src="/logos/black-hole.svg" alt="Trou noir" class="w-80" />
        <p class="text-center text-lg max-w-64">Il n'y a aucun projet qui correspond aux filtres que vous avez renseignés.</p>
    </div>
    <section class="px-main my-40 space-y-14">
        <h1 class="text-4xl text-center">Mes compétences techniques</h1>
        <div class="flex justify-center items-center w-full">
            <p class="text-center font-light leading-9 max-w-[600px]">Même si lister des technologies de cette manière n’a pas beaucoup de sens, je vous les présente comme les technologies que j’ai utilisées dans le passé et pour lesquelles j’ai un minimum d’expérience.</p>
        </div>
        <div class="flex flex-wrap *:mb-8 *:mr-8">
            {skills.map(s => (
                <Skill logo={s.logo} name={s.name} loved={s.loved} />
            ))}
        </div>
    </section>
</MainLayout>

<script define:vars={{ projects }}>window.projects = projects;</script>
<script src="../../lib/pages/projects.ts"></script>

<style lang="scss">
    label {
        @apply block mb-3 font-light opacity-60;
    }

    select {
        @apply w-full text-primary border-b-[1px] border-b-primary/10 bg-transparent;
    }

    :global(.filtered-skill) {
        @apply rounded-md bg-primary/75 px-4 py-2 mb-4 mr-4 flex items-center;

        :global(span) {
            @apply text-white text-xs mr-4;
        }

        :global(button) {
            @apply text-white opacity-50 hover:opacity-100;
        }
    }

    :global([data-hidden="true"]) {
        display: none;
    }
</style>
